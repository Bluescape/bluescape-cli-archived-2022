name: Create Release Build
on:
  workflow_dispatch:
    inputs:
      publicRelease:
        description: "public release"
        type: boolean
        required: false
        default: false

jobs:
  release-build:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v1
      - name: get build version 
        id: package-version
        run:  |
          PACKAGE_VERSION=$(cat ./package.json | jq '.version' | tr -d '"')
          [[ ${{github.event.inputs.publicRelease}} =~ "true" ]] && PACKAGE_VERSION="${PACKAGE_VERSION}" || PACKAGE_VERSION="${PACKAGE_VERSION}-dev"
          echo ::set-output name=current-version::$PACKAGE_VERSION
      - name: print publish version
        run: |
          echo ${{steps.package-version.outputs.current-version}}
      - uses: actions/setup-node@v3
        name: setup node 16
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        working-directory: .github/scripts
        env:
          GITHUBPAT: ${{ secrets.BDB_GITHUBPAT }}
        run: |
          ./configure_git.sh
          git checkout ${GITHUB_REF##*/}  

      - name: update .gitignore file to alllow build dir
        run: |
            sed 's/build\///g' .gitignore > .gitignore

      - name: install and build
        run: |
          npm install && npm run build

      - name: Commit and push tag.
        run: |
          git add build/*
          git commit -m "Bluescape CLI publish ${{steps.package-version.outputs.current-version}} release" 
          git tag ${{steps.package-version.outputs.current-version}}
          if [ "${{github.event.inputs.publicRelease}}" = true ]; then
            git tag -d latest
            git tag latest
          fi
          git push --tags -f
